<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.ethh.dal.mapper.AlgorithmStrategyMapper">

    <select id="selectStrategyOverview" resultType="org.ethh.dal.dto.StrategyOverviewDTO">
        select t1.id,t2.id algorithmStrategyId,t5.id algorithmParametersId,t2.strategy_name,t2.algorithm_status,
               t4.account_id,t4.account_name,t4.initial_capital, t3.symbol,t1.algorithm_strategy_operate,
               t3.fee accumulatedFees,DATEDIFF(NOW(), t2.created_at) runningDays,t4.current_margin_ratio
        from  algorithm_strategy_instance t1
        left join algorithm_strategy t2 on t2.id =t1.algorithm_strategy_id
        left join trading_product t3 on t2.trading_product_id =t3.id
        left join trading_account t4 on t2.trading_account_id =t4.id
        left join algorithm_parameters t5 on t2.algorithm_parameters_id = t5.id
        where t2.algorithm_status !='Undeployed'
        order by t1.created_at desc
    </select>

    <select id="selectStrategyOverviewUndeployed" resultType="org.ethh.dal.dto.StrategyOverviewDTO">
        select t1.id,t2.id algorithmStrategyId,t5.id algorithmParametersId,t2.strategy_name,t2.algorithm_status,
               t4.account_id,t4.account_name,t4.initial_capital, t3.symbol,t1.algorithm_strategy_operate,
               t3.fee accumulatedFees,DATEDIFF(NOW(), t2.created_at) runningDays,t4.current_margin_ratio
        from  algorithm_strategy_instance t1
                  left join algorithm_strategy t2 on t2.id =t1.algorithm_strategy_id
                  left join trading_product t3 on t2.trading_product_id =t3.id
                  left join trading_account t4 on t2.trading_account_id =t4.id
                  left join algorithm_parameters t5 on t2.algorithm_parameters_id = t5.id
        where t2.algorithm_status ='Undeployed'
        order by t1.created_at desc
    </select>

    <select id="selectStrategyParams" resultType="org.ethh.dal.dto.StrategyParametersDTO" parameterType="java.lang.Long">
        select t1.id strategyId,t1.exchange_id,1 tradingProductId,t1.trading_product_id periodId,t1.trading_account_id,
               t1.strategy_name,t2.algorithm_name,t2.algorithm_args
        from algorithm_strategy t1 left join algorithm_parameters t2
        on t1.algorithm_parameters_id =t2.id
        where t1.id=#{id}
    </select>

    <update id="updateStrategyParams" parameterType="map">
        update algorithm_parameters t1
            left join algorithm_strategy t2 on t1.id =t2.algorithm_parameters_id
            set algorithm_args=#{strategyParams}
        where t2.id= #{id}
    </update>

    <select id="selectAccountAssetsChange" resultType="org.ethh.dal.dto.AccountAssetsDTO">
        WITH RankedData AS (
            SELECT
                t1.id,
                t3.CreateTime,
                t3.Available,
                ROW_NUMBER() OVER (PARTITION BY CAST(t3.CreateTime AS DATE) ORDER BY t3.CreateTime DESC) AS rn
            FROM
                algorithm_strategy t1
                    LEFT JOIN
                trading_account t2 ON t1.trading_account_id = t2.id
                    LEFT JOIN
                capital_detail t3 ON t2.account_id = t3.AccountNo
            WHERE
                t1.id = '32'
        )
        SELECT
            id strategyId,
            CreateTime createTime,
            Available accountAssets
        FROM
            RankedData
        WHERE
            rn = 1
        order by CreateTime
    </select>

    <select id="selectYieldCurve" resultType="org.ethh.dal.dto.YieldCurveDTO">
    </select>
</mapper>